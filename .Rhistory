source("sim.R")
source("sim.R")
S.f
source("sim.R")
S.f$W
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
S.f
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
S.f
S
source("sim.R")
source("sim.R")
data
out
l
sls
ls
ls
source("sim.R")
source("sim.R")
is.n
source("sim.R")
w
source("sim.R")
source("sim.R")
source("sim.R")
data
S
W
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
S.f$o
S.f$o
data
W
source("sim.R")
source("sim.R")
source("sim.R")
a
length(a)
length(a)
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
S.f
length (S.f)
for (i in S.f) print(i)
S.f$init_placement1$o
S.f$init_placement1$o[-1,]
S.f$init_placement1$o[,-1]
data<-list();
for (i in S.f) {
  data[[ncol(i$o)-1/8]]<-i$o[,-1];
}
data
a<-list()
a
a<-c(a, c(1,2,3,))
a<-c(a, c(1,2,3))
a
a<-c(a, S.f$init_placement1$o)
a
data<-data.frame();
len<-vector();
for (i in S.f) {
  data<-cbind(data, i$o[,-1]);
  len<-c(len,ncol(i$o[,-1])/8);
}
?data.frame
data<-data.frame(row.names=c("E1", "E2", "N1", "N2"));
len<-vector();
for (i in S.f) {
  data<-cbind(data, i$o[,-1]);
  len<-c(len,ncol(i$o[,-1])/8);
}
data
len
hist (len)
barplot (table(len))
write.table(data, file=full.run, row.names=T, col.names=F, sep=" ", quote=F, append=F);
ncol(datA)
ncol(data)
q()
source("sim.R")
S.f$init_placement0$m
S.f$init_placement0$o
S.f$init_placement0$d
S.f$init_placement0$d
S.f$init_placement1$d
fn.Merit(c(103.16457, 21.04507, 261.94547
fn.Merit(c(103.16457, 21.04507, 261.94547, 108.96202))
fn.Merit(s.f$init_placement0$d[1:4])
fn.Merit(S.f$init_placement0$d[1:4])
fn.Merit(S.f$init_placement0$d$init[1:4])
fn.Merit(S.f$init_placement0$d$init[1:4])
fn.Merit(S.f$init_placement0$d$1[1:4])
fn.Merit(S.f$init_placement0$d$2[1:4])
fn.Merit(S.f$init_placement0$d[[2]][1:4])
fn.Merit(S.f$init_placement0$d[[2]][1:4])
source("sim.R")
source("sim.R")
S.f$init_placement0$d
S.f$init_placement0$d
source("sim.R")
fn.Merit(S.f$init_placement0$d[[2]][1:4])
fn.Merit(S.f$init_placement0$d[[2]][1:4])
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
S.f$init_placement0$d
source("sim.R")
S.f$init_placement0$d
S.f$init_placement0$d
source("sim.R")
S.f$init_placement0$d
S.f$init_placement0$d
source("sim.R")
S.f$init_placement0$d
S.f$init_placement0$d
source("sim.R")
source("sim.R")
S.f$init_placement0$d
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
     lq_high lat_pred   lat_low lat_high  iops_pred   iops_low  iops_high
E1 174.581363 828.0729 783.23889 872.9068   6.038116   5.727988   6.383748
E2   7.901211 138.9048 119.78540 158.0242 143.983493 126.562872 166.965260
N1  44.046106 379.6265 318.79204 440.4611  26.341677  22.703482  31.368412
N2  13.310726 104.4271
fn.Merit(174.581363, 7.901211, 44.046106, 13.310726)
fn.Merit(c(174.581363, 7.901211, 44.046106, 13.310726))
S.f$init_placement0$d
S.f$init_placement0$m
S.f$init_placement0$o
S.f$init_placement0$s
S.f$init_placement0$d
S.f$init_placement0$w
S.f$init_placement0$S
S.f$init_placement0$w
S.f$init_placement0$W
fn.updateMerit(1, "E1", S.f$init_placement0$W, S.f$init_placement0$S)
S.f$init_placement0$d
debug
debug()
debug(fn.updateMerit(1, "E1", S.f$init_placement0$W, S.f$init_placement0$S))
debug(fn.updateMerit)
source("sim.R")
warnings()
warnings()
source("sim.R")
warnings()
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
?cat
source("sim.R")
source("sim.R")
source("sim.R")
S.f$init_placement0$d
 
source("sim.R")
source("sim.R")
source("sim.R")
moved
source("sim.R")
source("sim.R")
source("sim.R")
S.f$init_placement0$d
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
S.f$init_placement0$d
S.f$init_placement0$w
S.f$init_placement0$W
S.f$init_placement0$W
source("sim.R")
source("sim.R")
source("sim.R")
S.f$init_placement0$m
S.f$init_placement0$d
S.f$init_placement0$o
S.f$init_placement0$o
source("sim.R")
S.f$init_placement0$d
S.f$init_placement0$d
source("sim.R")
S.f$init_placement0$d
S.f$init_placement1$d
S.f$init_placement1$d
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
w
source("sim.R")
S.f$init_placement0$d
S.f$init_placement1$d
S.f$init_placement2$d
S.f$init_placement10$d
source("sim.R")
source("sim.R")
source("sim.R")
source("sim.R")
S.f$init_placement101$d
source("sim.R")
S.f$init_placement101$d
as.data.frame(S.f$init_placement101$d
)
as.data.frame(S.f$init_placement101$d)
as.data.frame(S.f$init_placement101$d)
source("sim.R")
source("sim.R")
source("sim.R")
S.f$init_placement101$d
as.data.frame(S.f$init_placement101$d)
do.call(rbind,S.f$init_placement101$d)
for (i in S.f) print (i)
source("sim.R")
source("sim.R")
source("sim.R")
lat
source("sim.R")
lat
lat
source("sim.R")
source("sim.R")
source("sim.R")
lat
lat[[1]]
?data.frame
a<-data.frame(row.names(c("E1", "E2", "N1", "N2")))
a
a
source("sim.R")
lat
matplot(t(lat[[6]][,-5]))
dev.off()
dev.off()
matplot(t(lat[[6]][,-5]))
t(lat[[6]][,-5])
matplot(lat[[6]][,-5])
matplot(lat[[6]][,-5], type="b")
is.na(lat[[6]])
which(is.na(lat[[6]])
)
is.na(lat[[6]])
lat[is.na(lat[[6]])
]
lat[is.na(lat[[6]])]
lat[[6]][is.na(lat[[6]])]
lat[[6]][is.na(lat[[6]])]<-0
which(is.na(lat[[6]])
source("sim.R")
matplot(lat[[6]][,-5], type="b")
matplot(lat[[6]][,-5], type="b")
matplot(lat[[1]][,-5], type="b")
matplot(lat[[2]][,-5], type="b")
matplot(lat[[3]][,-5], type="b")
matplot(lat[[3]][,-5], type="b")
matplot(lat[[4]][,-5], type="b")
matplot(lat[[4]][,-6], type="b")
matplot(lat[[4]][,-6], type="b")
matplot(lat[[3]][,-5], type="b", pch="E1"))
matplot(lat[[3]][,-5], type="b", pch="E1"))
matplot(lat[[3]][,-5], type="b", pch="E1")
matplot(lat[[3]][,-5], type="b", pch="{E1}")
matplot(lat[[3]][,-5], type="b", pch=E1)
matplot(lat[[3]][,-5], type="b", pch=c("E1"))
matplot(lat[[3]][,-5], type="b", pch=c("E1", "E2", "N1", "N2"))
matplot(lat[[3]][,-5], type="b", pch=c("E1", "E2", "N1", "N2"))
matplot(lat[[3]][,-5], type="b", pch=c("", "E2", "N1", "N2"))
matplot(lat[[3]][,-5], type="b", pch=c(""E1"", "E2", "N1", "N2"))
matplot(lat[[3]][,-5], type="b", pch=c('E1', "E2", "N1", "N2"))
matplot(lat[[3]][,-5], type="b", pch=c("E1", "E2", "N1", "N2"))
?pch
matplot(lat[[3]][,-5], type="b", pch=1:4)
matplot(lat[[3]][,-5], type="b", pch=1:4, ylab="number of moves", xlab="Latency(ms)")
matplot(lat[[3]][,-5], type="b", pch=1:4, xlab="number of moves", ylab="Latency(ms)")
legend("topright", x("E1", "E2", "N1", "N2"), pch=1:4, lty=1:4, col=1:4)
legend("topright", c("E1", "E2", "N1", "N2"), pch=1:4, lty=1:4, col=1:4)
legend("topright", c("E1", "E2", "N1", "N2"), pch=1:4, lty=1:4, col=1:4)
source("sim.R")
dev.off()
dev.off()
dev.off()
source("sim.R")
source("sim.R")
dev.off()
dev.off()
source("sim.R")
source("sim.R")
dev.off()
dev.off()
dev.off()
source("sim.R")
q()
source("sim.R")
data<-data.frame(row.names=c("E1", "E2", "N1", "N2"));
len<-vector();
lat<-list();
num<-1;
for (i in S.f) {
  data<-cbind(data, i$o[,-1]);
  len<-c(len,ncol(i$o[,-1])/8);
  lat[[num]]<-do.call(rbind, i$d);
  pdf(paste("plots/", num, "latency_reduction.pdf",sep=""), width=6, height=6, onefile=F);
  matplot(lat[[num]][,-5], type="b", pch=1:4, xlab="number of moves", ylab="Latency(ms)");
  legend("topright", c("E1", "E2", "N1", "N2"), pch=1:4, lty=1:4, col=1:4);
  dev.off();
  num<-num+1;
}
write.table(data, file=full.run, row.names=T, col.names=F, sep=" ", quote=F, append=F);
data<-data.frame(row.names=c("E1", "E2", "N1", "N2"));
len<-vector();
lat<-list();
num<-1;
for (i in S.f) {
  data<-cbind(data, i$o[,-1]);
  len<-c(len,ncol(i$o[,-1])/8);
  lat[[num]]<-do.call(rbind, i$d);
  pdf(paste("plots/", num, "latency_reduction.pdf",sep=""), width=6, height=6, onefile=F);
  matplot(lat[[num]][,-5], type="b", pch=1:4, xlab="number of moves", ylab="Latency(ms)", col=c(1,2,3,5));
  legend("topright", c("E1", "E2", "N1", "N2"), pch=1:4, lty=1:4, col=c(1,2,3,5));
  dev.off();
  num<-num+1;
}
warnings()
 matplot(lat[[num]][,-5], type="b", pch=1:4, xlab="number of moves", ylab="Latency(ms)", col=c(1,2,4,5));
 matplot(lat[[num]][,-5], type="b", pch=1:4, xlab="number of moves", ylab="Latency(ms)", col=c(1,2,4,5));
data<-data.frame(row.names=c("E1", "E2", "N1", "N2"));
len<-vector();
lat<-list();
num<-1;
for (i in S.f) {
  data<-cbind(data, i$o[,-1]);
  len<-c(len,ncol(i$o[,-1])/8);
  lat[[num]]<-do.call(rbind, i$d);
  pdf(paste("plots/", num, "latency_reduction.pdf",sep=""), width=6, height=6, onefile=F);
  matplot(lat[[num]][,-5], type="b", pch=1:4, xlab="number of moves", ylab="Latency(ms)", col=c(1,2,4,5));
  legend("topright", c("E1", "E2", "N1", "N2"), pch=1:4, lty=1:4, col=c(1,2,4,5));
  dev.off();
  num<-num+1;
}
data<-data.frame(row.names=c("E1", "E2", "N1", "N2"));
len<-vector();
lat<-list();
num<-1;
for (i in S.f) {
  data<-cbind(data, i$o[,-1]);
  len<-c(len,ncol(i$o[,-1])/8);
  lat[[num]]<-do.call(rbind, i$d);
  pdf(paste("plots/", num, "latency_reduction.pdf",sep=""), width=6, height=6, onefile=F);
  matplot(lat[[num]][,-5], type="b", pch=1:4, xlab="number of moves", ylab="Latency(ms)", col=c(1,2,4,6));
  legend("topright", c("E1", "E2", "N1", "N2"), pch=1:4, lty=1:4, col=c(1,2,4,6));
  dev.off();
  num<-num+1;
}
data<-data.frame(row.names=c("E1", "E2", "N1", "N2"));
len<-vector();
lat<-list();
num<-1;
for (i in S.f) {
  data<-cbind(data, i$o[,-1]);
  len<-c(len,ncol(i$o[,-1])/8);
  lat[[num]]<-do.call(rbind, i$d);
  #pdf(paste("plots/", num, "latency_reduction.pdf",sep=""), width=6, height=6, onefile=F);
  png(paste("plots/", num, "latency_reduction.png",sep=""), width=6, height=6);
  matplot(lat[[num]][,-5], type="b", pch=1:4, xlab="number of moves", ylab="Latency(ms)", col=c(1,2,4,6));
  legend("topright", c("E1", "E2", "N1", "N2"), pch=1:4, lty=1:4, col=c(1,2,4,6));
  dev.off();
  num<-num+1;
}
dev.off()
dev.off()
dev.off()
gif(()
gif()
png()
rnorm(10)
rnorm(10, 10)
rnorm(10, 10,10)
rnorm(4, 10,10)
source("sim.R")
source("sim.R")
data<-data.frame(row.names=c("E1", "E2", "N1", "N2"));
len<-vector();
lat<-list();
num<-1;
for (i in S.f) {
  data<-cbind(data, i$o[,-1]);
  len<-c(len,ncol(i$o[,-1])/8);
  lat[[num]]<-do.call(rbind, i$d);
  pdf(paste("plots/", num, "latency_reduction.pdf",sep=""), width=6, height=6, onefile=F);
  #png(paste("plots/", num, "latency_reduction.png",sep=""), width=6, height=6);
  matplot(lat[[num]][,-5], type="b", pch=1:4, xlab="Number of moves", ylab="Average latency(ms)", col=c(1,2,4,6));
  legend("topright", c("E1", "E2", "N1", "N2"), pch=1:4, lty=1:4, col=c(1,2,4,6));
  dev.off();
  num<-num+1;
}
lat
lapply(lat, function(x)(x[1,5]-x[nrow(x), 5]))
diff<-unlist(lapply(lat, function(x)(x[1,5]-x[nrow(x), 5])))
diff
plot (diff)
plot (diff[1:10])
plot (diff)
plot (which (max(diff)))
(which (max(diff)))
max(diff)
names(diff)<-1:200
diff
max(diff)
which(max(diff))
diff[diff>1000]
diff[diff>2000]
diff[diff<100]
lat[[55]]
1:5+rnorm(4, 10, 10)
source("sim.R")
diff<-unlist(lapply(lat, function(x)(x[1,5]-x[nrow(x), 5])))
diff[diff>2000]
diff[diff>1000]
diff[diff<200]
diff[diff<100]
names(diff)<-1:200
diff[diff<100]
lat[[55]]
diff[diff<51]
diff[diff==51]
diff[[51]]
diff[diff<100]
diff[diff<100]
len
lat
diff<-unlist(lapply(lat, function(x)(x[1,5]-x[nrow(x), 5])))before<-unlist(lapply(lat, function(x)(c(x[1,-5]))));
after<-unlist(lapply(latm function(x)(x(x[nrow(x), -5]))));
before<-unlist(lapply(lat, function(x)(c(x[1,-5]))));
after<-unlist(lapply(latm function(x)(x(x[nrow(x), -5]))));
before<-unlist(lapply(lat, function(x)(c(x[1,-5]))));
after<-unlist(lapply(lat, function(x)(x(x[nrow(x), -5]))));
before<-unlist(lapply(lat, function(x)(x[1,-5])));
after<-unlist(lapply(lat, function(x)(x[nrow(x), -5])));
before
before<-as.data.frame(lapply(lat, function(x)(x[1,-5])));
after<-as.data.frame(lapply(lat, function(x)(x[nrow(x), -5])));
before
before<-do.call(rbind, (lapply(lat, function(x)(x[1,-5]))));
befire
before
boxplot(before)
before<-do.call(rbind, (lapply(lat, function(x)(x[1,-5]))));
after<-do.call(rbind, (lapply(lat, function(x)(x[nrow(x), -5]))));
X11()
boxplot(after)
dev.off()
dev.off()
boxplot(before, ylim=c(0, 3000))
boxplot(before, ylim=c(0, 1800))
boxplot(before, ylim=c(0, 2000))
boxplot(before, ylim=c(0, 1800))
boxplot(after, ylim=c(0, 1800))
X11()
boxplot(before, ylim=c(0, 1800))
boxplot(before, ylim=c(0, 1800))
?boxplot
boxplot(before, ylim=c(0,1800), xlab="Data stores", ylab="Average latency(ms)", names=c("E1", "E2", "N1", "N2"));
boxplot(after, ylim=c(0,1800), xlab="Data stores", ylab="Average latency(ms)", names=c("E1", "E2", "N1", "N2"));
boxplot(before, ylim=c(0,1800), xlab="Data stores", ylab="Average latency(ms)", names=c("E1", "E2", "N1", "N2"));
pdf("initial_datastore_latency.pdf", width=6, height=6, onefile=F)
boxplot(before, ylim=c(0,1800), xlab="Data stores", ylab="Average latency(ms)", names=c("E1", "E2", "N1", "N2"));
dev.off()
pdf("romano_datastore_latency.pdf", width=6, height=6, onefile=F)
boxplot(after, ylim=c(0,1800), xlab="Data stores", ylab="Average latency(ms)", names=c("E1", "E2", "N1", "N2"));
dev.off()
q()
